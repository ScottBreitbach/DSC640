dropout_colors <- c(dropout_colors, col)
}
# set colors based on dropout rates
dropout_colors <- c()
for (i in 1:length(education$state)) {
if(education$dropout_rate[i] > 5.3) {
col <- '#000000'
} else {
col <- '#bdbdbd'
}
dropout_colors <- c(dropout_colors, col)
}
# Pass the colors in to the parallel function
parallelplot(education[,2:7], horizontal.axis=FALSE, col = dropout_colors)
# Load data
url <- "http://datasets.flowingdata.com/education.csv"
education <- read.csv(url, header = TRUE)
# Figure out how far each state should be from each other
ed.dis <- dist(education[,2:7])
ed.dis
# get x-y coordinates for each state
ed.mds <- cmdscale(ed.dis)
ed.mds
# store these values in x and y variables
x <- ed.mds[,1]
y <- ed.mds[,2]
plot(x, y)
# add labels
plot(x, y, type='n')
text(x, y, labels = education$state)
plot(x, y, type='n')
text(x, y, labels = education$state, col = reading_colors)
plot(x, y, type='n')
text(x, y, labels = education$state, col = dropout_colors)
## Model-based clustering
library(mclust)
ed.mclust <- Mclust(ed.mds)
# plot
plot(ed.mclust, data = ed.mds)
# plot
plot(ed.mclust, data = ed.mds)
# plot
plot(ed.mclust, data = ed.mds)
# plot
plot(ed.mclust, data = ed.mds)
# get x-y coordinates for each state
ed.mds <- cmdscale(ed.dis)
# fit
ed.mclust <- Mclust(ed.mds)
# plot
plot(ed.mclust, data = ed.mds)
# fit
ed.mclust <- Mclust(ed.mds)
# plot
plot(ed.mclust, data = ed.mds)
# Set Working Directory
setwd("C:/Users/micha/OneDrive/Documents/GitHub/DSC640/Weeks11-12/")
# Load data
birthdf <- read.csv('birth-rate.csv')
hist(birthdf$X1980)
birthdf <- read.csv('birth-rate.csv', breaks=20)
hist(birthdf$X1980, breaks = 20)
histogram(birthdf$X1980, breaks = 20)
library(ggplot2)
h <- ggplot(birthdf, aes(x=x1980)) +
geom_histogram()
h
ggplot(birthdf, aes(x=x1980)) +
geom_histogram()
ggplot(birthdf, aes(x='x1980')) +
geom_histogram()
source("~/GitHub/DSC640/Weeks11-12/R_6-2_test.R", echo=TRUE)
birthdf.columns
columns(birthdf)
birthdf.head()
head(birthdf)
ggplot(birthdf, aes(x='X1980   ')) +
geom_histogram()
ggplot(birthdf, aes(x='X1980  ')) +
geom_histogram()
colnames(birthdf)
ggplot(birthdf, aes(x=X1980)) +
geom_histogram()
h <- ggplot(birthdf, aes(x=X1980)) +
geom_histogram()
h
ggplot(birthdf, aes(x=X1980)) +
geom_histogram()
ggplot(birthdf, aes(x=X1980)) +
geom_histogram(binwidth = 3)
# Plot histogram
ggplot(birthdf, aes(x=X1980)) +
geom_histogram()
ggplot(birthdf, aes(x=X1980)) +
geom_histogram(binwidth = 1)
ggplot(birthdf, aes(x=X1980)) +
geom_histogram(binwidth = 2)
ggplot(birthdf, aes(x=X1980)) +
geom_histogram(binwidth = 3)
ggplot(birthdf, aes(x=X1980)) +
geom_histogram(binwidth = 2, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
ggtitle('Global Birth Rate Distribution, 1980')
summary(birthdf$X1980)
ggplot(birthdf, aes(x=X1980)) +
geom_histogram(binwidth = 2, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
xlim(0,60)
ggplot(birthdf, aes(x=X1980)) +
geom_histogram(binwidth = 2, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
xlim(0,60) +
ggtitle('Global Birth Rate Distribution, 1980')
# Set color to Bellevue purple
color = "#4f3674"
ggplot(birthdf, aes(x=X1980)) +
geom_histogram(binwidth = 2, fill=color, color="#e9ecef", alpha=0.9) +
xlim(0,60) +
ggtitle('Global Birth Rate Distribution, 1980')
ggplot(birthdf, aes(x=X1980)) +
geom_histogram(binwidth = 2, fill=color, color="#e9ecef", alpha=0.8) +
xlim(0,60) +
ggtitle('Global Birth Rate Distribution, 1980')
ggplot(birthdf, aes(x=X1980)) +
geom_histogram(binwidth = 2, fill=color, color="#e9ecef", alpha=0.8) +
xlim(0,60) +
ggtitle('Global Birth Rate Distribution, 1980') +
labs(y="Live Births per 1000 Population", x="Count") +
# Create stem-and-leaf plot
stem(birth$X2008)
ggplot(birthdf, aes(x=X1980)) +
geom_histogram(binwidth = 2, fill=color, color="#e9ecef", alpha=0.8) +
xlim(0,60) +
ggtitle('Global Birth Rate Distribution, 1980') +
labs(y="Live Births per 1000 Population", x="Count")
ggplot(birthdf, aes(x=X1980)) +
geom_histogram(binwidth = 2.5, fill=color, color="#e9ecef", alpha=0.8) +
xlim(0,60) +
ggtitle('Global Birth Rate Distribution, 1980') +
labs(y="Live Births per 1000 Population", x="Count")
ggplot(birthdf, aes(x=X1980)) +
geom_histogram(binwidth = 3, fill=color, color="#e9ecef", alpha=0.8) +
xlim(0,60) +
ggtitle('Global Birth Rate Distribution, 1980') +
labs(y="Live Births per 1000 Population", x="Count")
ggplot(birthdf, aes(x=X1980)) +
geom_histogram(binwidth = 2, fill=color, color="#e9ecef", alpha=0.8) +
xlim(0,60) +
ggtitle('Global Birth Rate Distribution, 1980') +
labs(x="Live Births per 1000 Population", y="Count")
head(mtcars)
educadf <- read.csv('education.csv')
head(educadf)
# Plot box plot
ggplot(educadf, aes(x=reading)) +
geom_boxplot()
# Plot box plot
ggplot(educadf, aes(x=c(reading, math, writing)) +
# Plot box plot
ggplot(educadf, aes(x=c('reading', 'math', 'writing')) +
geom_boxplot()
# Plot box plot
ggplot(educadf, aes(x=c('reading', 'math', 'writing'))) +
geom_boxplot()
# Plot box plot
ggplot(educadf, aes(x=reading)) +
geom_boxplot()
# Plot box plot
ggplot(educadf, aes(x=reading)) +
geom_boxplot(fill=color, alpha=0.8)
head(educadf[:3])
head(educadf[,:3])
head(educadf[,1:3])
head(educadf[,1:4])
melt(educadf[,1:4], id="state")
library(reshape)
library(reshape2)
melt(educadf[,1:4], id="state")
edumelt <- melt(educadf[,1:4], id="state")
head(edumelt)
ggplot(edumelt, aes(x=variable, y=value)) +
geom_boxplot(fill=color, alpha=0.8)
# make Box plot
ggplot(edumelt, aes(x=variable, y=value)) +
geom_boxplot(fill=color, alpha=0.8) +
ggtitle('Distribution of SAT Scores in the United States') +
labs(x="Subject", y="SAT Score")
# Save reformatted data as CSV for use elsewhere
write.csv(edumelt, "education_melted.csv", row.names = FALSE)
names(educadf)
library(gdata)
head(educadf)
df <- rename.vars(educadf, from = c("reading", "math", "writing"),
to = c("Reading", "Math", "Writing"))
head(df)
head(educadf)
educadf <- rename.vars(educadf, from = c("reading", "math", "writing"),
to = c("Reading", "Math", "Writing"))
head(educadf)
edumelt <- melt(educadf[,1:4], id="state")
head(edumelt)
# Save reformatted data as CSV for use elsewhere
write.csv(edumelt, "education_melted.csv", row.names = FALSE)
# Make Box plot
ggplot(edumelt, aes(x=variable, y=value)) +
geom_boxplot(fill=color, alpha=0.8) +
ggtitle('Distribution of SAT Scores in the United States') +
labs(x="Subject", y="SAT Score")
names(educadf)
names(educadf) <- toupper(names(educadf))
names(educadf)
names(educadf) <- str_to_title(names(educadf))
#
library(tidyr)
names(educadf) <- str_to_title(names(educadf))
#
library(stringr)
names(educadf) <- str_to_title(names(educadf))
names(educadf)
# ## DISTRIBUTION ##
#
# dataURL <- "http://datasets.flowingdata.com/birth-rate.csv"
#
# # Load data
# birth <- read.csv(dataURL)
# Set Working Directory
setwd("C:/Users/micha/OneDrive/Documents/GitHub/DSC640/Weeks11-12/")
# Load libraries
library(ggplot2)
library(reshape2)
library(gdata)
# Set color to Bellevue purple
color = "#4f3674"
# Load data
birthdf <- read.csv('birth-rate.csv')
educadf <- read.csv('education.csv')
summary(birthdf$X1980)
head(educadf)
# # Histogram in base R
# hist(birthdf$X1980)
# hist(birthdf$X1980, breaks = 20)
## HISTOGRAM
# Plot histogram
ggplot(birthdf, aes(x=X1980)) +
geom_histogram()
ggplot(birthdf, aes(x=X1980)) +
geom_histogram(binwidth = 2)
ggplot(birthdf, aes(x=X1980)) +
geom_histogram(binwidth = 2, fill=color, color="#e9ecef", alpha=0.8) +
xlim(0,60) +
ggtitle('Global Birth Rate Distribution, 1980') +
labs(x="Live Births per 1000 Population", y="Count")
## BOX PLOT
# # Plot box plot
# ggplot(educadf, aes(x=reading)) +
#   geom_boxplot(fill=color, alpha=0.8)
#
#
# head(educadf[,1:4])
names(educadf)
# Rename relevant columns to Title Case
# # https://stackoverflow.com/questions/7531868/how-to-rename-a-single-column-in-a-data-frame
# library(gdata)
# educadf <- rename.vars(educadf, from = c("reading", "math", "writing"),
#                        to = c("Reading", "Math", "Writing"))
# https://www.geeksforgeeks.org/convert-first-letter-of-every-word-to-uppercase-in-r-programming-str_to_title-function/?ref=lbp
library(stringr)
names(educadf) <- str_to_title(names(educadf))
head(educadf)
# Reformat education data
# https://www.statmethods.net/management/reshape.html
library(reshape2)
edumelt <- melt(educadf[,1:4], id="state")
head(edumelt)
# Save reformatted data as CSV for use elsewhere
write.csv(edumelt, "education_melted.csv", row.names = FALSE)
# Make Box plot
ggplot(edumelt, aes(x=variable, y=value)) +
geom_boxplot(fill=color, alpha=0.8) +
ggtitle('Distribution of SAT Scores in the United States') +
labs(x="Subject", y="SAT Score")
## BULLET CHART
#
names(educadf)
#
summary(educadf)
mean(educadf$Reading)
educadf['Nebraska']
educadf[educadf['State'] == 'Nebraska']
b_colors <- c("#4f3674", "#8867b8", "#9d82c5")
names(b_colors) <- c('Ok', 'Good', 'Excellent')
ggplot() +
geom_bar(educadf, aes(x = State, y = Reading), stat = 'identity', position = 'stack')
ggplot() +
geom_bar(educadf, aes(x = State, y = Reading, fill = Reading), stat = 'identity', position = 'stack')
ggplot() +
geom_bar(educadf,
aes(x = State, y = Reading), fill = 'black', width = 0.2, stat = 'identity')
ggplot() +
geom_bar(educadf,
aes(x = State, y = Reading),
fill = 'black', width = 0.2)#, stat = 'identity')
names(educadf)
ggplot() +
geom_bar(data = educadf,
aes(x = State, y = Reading),
fill = 'black', width = 0.2, stat = 'identity')
ggplot() +
geom_bar(data = head(educadf),
aes(x = State, y = Reading),
fill = 'black', width = 0.2, stat = 'identity')
head(educadf)
educadf[1:10]
educadf[,1:10]
educadf[:,1:10]
educadf[1:10,:]
head(educadf, 10)
educadf[educadf$State == "United States"]
educadf[educadf$State == "United States",]
educadf[educadf$State == "District of Columbia",]
# Remove United States due to averages
educadf <- educadf[educadf$state != "United States",]
# ## DISTRIBUTION ##
#
# dataURL <- "http://datasets.flowingdata.com/birth-rate.csv"
#
# # Load data
# birth <- read.csv(dataURL)
# Set Working Directory
setwd("C:/Users/micha/OneDrive/Documents/GitHub/DSC640/Weeks11-12/")
# Load libraries
library(ggplot2)
library(reshape2)
library(gdata)
# Set color to Bellevue purple
color = "#4f3674"
# Load data
birthdf <- read.csv('birth-rate.csv')
educadf <- read.csv('education.csv')
summary(birthdf$X1980)
head(educadf)
# # Histogram in base R
# hist(birthdf$X1980)
# hist(birthdf$X1980, breaks = 20)
## HISTOGRAM
# Plot histogram
# ggplot(birthdf, aes(x=X1980)) +
#   geom_histogram()
#
# ggplot(birthdf, aes(x=X1980)) +
#   geom_histogram(binwidth = 2)
ggplot(birthdf, aes(x=X1980)) +
geom_histogram(binwidth = 2, fill=color, color="#e9ecef", alpha=0.8) +
xlim(0,60) +
ggtitle('Global Birth Rate Distribution, 1980') +
labs(x="Live Births per 1000 Population", y="Count")
## BOX PLOT
# # Plot box plot
# ggplot(educadf, aes(x=reading)) +
#   geom_boxplot(fill=color, alpha=0.8)
#
#
# head(educadf[,1:4])
names(educadf)
# Rename relevant columns to Title Case
# # https://stackoverflow.com/questions/7531868/how-to-rename-a-single-column-in-a-data-frame
# library(gdata)
# educadf <- rename.vars(educadf, from = c("reading", "math", "writing"),
#                        to = c("Reading", "Math", "Writing"))
# https://www.geeksforgeeks.org/convert-first-letter-of-every-word-to-uppercase-in-r-programming-str_to_title-function/?ref=lbp
library(stringr)
names(educadf) <- str_to_title(names(educadf))
head(educadf)
# Remove United States due to averages
educadf <- educadf[educadf$state != "United States",]
# Reformat education data
# https://www.statmethods.net/management/reshape.html
library(reshape2)
edumelt <- melt(educadf[,1:4], id="state")
head(edumelt)
# Save reformatted data as CSV for use elsewhere
write.csv(edumelt, "education_melted.csv", row.names = FALSE)
# Make Box plot
ggplot(edumelt, aes(x=variable, y=value)) +
geom_boxplot(fill=color, alpha=0.8) +
ggtitle('Distribution of SAT Scores in the United States') +
labs(x="Subject", y="SAT Score")
## BULLET CHART
#
summary(educadf)
mean(educadf$Reading)
educadf[educadf['State'] == 'Nebraska']
b_colors <- c("#4f3674", "#8867b8", "#9d82c5")
names(b_colors) <- c('Ok', 'Good', 'Excellent')
ggplot() +
geom_bar(educadf, aes(x = State, y = Reading, fill = Reading), stat = 'identity', position = 'stack')
ggplot() +
geom_bar(data = head(educadf),
aes(x = State, y = Reading),
fill = 'black', width = 0.2, stat = 'identity')
names(educadf)
head(educadf, 10)
ggplot() +
geom_bar(data = head(educadf),
aes(x = State, y = Reading),
fill = 'black', width = 0.2, stat = 'identity')
head(educadf, 10)
names(educadf)
head(educadf)
educadf <- read.csv('education.csv')
head(educadf)
names(educadf) <- str_to_title(names(educadf))
head(educadf)
# Remove United States due to averages
educadf <- educadf[educadf$state != "United States",]
head(educadf)
educadf <- read.csv('education.csv')
names(educadf)
names(educadf) <- str_to_title(names(educadf))
head(educadf)
educadf[educadf$state != "United States",]
head(educadf)
educadf[educadf$State != "United States"]
educadf[educadf$State != "United States",]
# Remove United States due to averages
educadf <- educadf[educadf$State != "United States",]
head(educadf)
# ## DISTRIBUTION ##
#
# dataURL <- "http://datasets.flowingdata.com/birth-rate.csv"
#
# # Load data
# birth <- read.csv(dataURL)
# Set Working Directory
setwd("C:/Users/micha/OneDrive/Documents/GitHub/DSC640/Weeks11-12/")
# Load libraries
library(ggplot2)
library(reshape2)
library(gdata)
# Set color to Bellevue purple
color = "#4f3674"
# Load data
birthdf <- read.csv('birth-rate.csv')
educadf <- read.csv('education.csv')
summary(birthdf$X1980)
head(educadf)
# # Histogram in base R
# hist(birthdf$X1980)
# hist(birthdf$X1980, breaks = 20)
## HISTOGRAM
# Plot histogram
# ggplot(birthdf, aes(x=X1980)) +
#   geom_histogram()
#
# ggplot(birthdf, aes(x=X1980)) +
#   geom_histogram(binwidth = 2)
ggplot(birthdf, aes(x=X1980)) +
geom_histogram(binwidth = 2, fill=color, color="#e9ecef", alpha=0.8) +
xlim(0,60) +
ggtitle('Global Birth Rate Distribution, 1980') +
labs(x="Live Births per 1000 Population", y="Count")
## BOX PLOT
# # Plot box plot
# ggplot(educadf, aes(x=reading)) +
#   geom_boxplot(fill=color, alpha=0.8)
#
#
# head(educadf[,1:4])
names(educadf)
# Rename relevant columns to Title Case
# # https://stackoverflow.com/questions/7531868/how-to-rename-a-single-column-in-a-data-frame
# library(gdata)
# educadf <- rename.vars(educadf, from = c("reading", "math", "writing"),
#                        to = c("Reading", "Math", "Writing"))
# https://www.geeksforgeeks.org/convert-first-letter-of-every-word-to-uppercase-in-r-programming-str_to_title-function/?ref=lbp
library(stringr)
names(educadf) <- str_to_title(names(educadf))
head(educadf)
# Remove United States due to averages
educadf <- educadf[educadf$State != "United States",]
# # Remove Washington, DC due to outliers
# crimeDF <- crimeDF[crimeDF$state != "District of Columbia",]
# # And remove United States due to averages
# crimeDF <- crimeDF[crimeDF$state != "United States",]
#
#
# educadf[educadf$State != "United States",]
head(educadf)
# Reformat education data
# https://www.statmethods.net/management/reshape.html
library(reshape2)
edumelt <- melt(educadf[,1:4], id="state")
head(edumelt)
# Save reformatted data as CSV for use elsewhere
write.csv(edumelt, "education_melted.csv", row.names = FALSE)
# Make Box plot
ggplot(edumelt, aes(x=variable, y=value)) +
geom_boxplot(fill=color, alpha=0.8) +
ggtitle('Distribution of SAT Scores in the United States') +
labs(x="Subject", y="SAT Score")
## BULLET CHART
#
summary(educadf)
mean(educadf$Reading)
educadf[educadf['State'] == 'Nebraska']
b_colors <- c("#4f3674", "#8867b8", "#9d82c5")
names(b_colors) <- c('Ok', 'Good', 'Excellent')
ggplot() +
geom_bar(educadf, aes(x = State, y = Reading, fill = Reading), stat = 'identity', position = 'stack')
ggplot() +
geom_bar(data = head(educadf),
aes(x = State, y = Reading),
fill = 'black', width = 0.2, stat = 'identity')
names(educadf)
head(educadf, 10)
